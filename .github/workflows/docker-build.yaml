name: Docker Build

'on':
    push:
        tags: [ '*.*.*-*' ]
        branches: [ main ]
    pull_request:
        branches: [ main ]

concurrency:
    group: ${{ github.workflow }}-${{ github.head_ref || github.ref_name }}
    cancel-in-progress: true

env:
    DOCKER_IMAGE: etriasnl/php-fpm

jobs:
    build:
        strategy:
            matrix:
                runner: [ ubuntu-latest, ubuntu-bizhost ]
        runs-on: ${{ matrix.runner }}
        steps:
            -
                uses: actions/checkout@v4.2.2
            -
                uses: docker/setup-buildx-action@v3.8.0
            -
                id: build
                uses: docker/build-push-action@v6.11.0
                with:
                    context: .
                    load: true
                    # https://docs.docker.com/build/ci/github-actions/cache/#github-cache
                    cache-from: type=gha
                    cache-to: type=gha,mode=max
            -
                run: |
                    set -eu
                    docker run --rm '${{ steps.build.outputs.imageid }}' php -v
                    docker run --rm '${{ steps.build.outputs.imageid }}' php -m
                    docker run --rm '${{ steps.build.outputs.imageid }}' php -i | grep 'blackfire.apm_enabled => 0 => 0'
                    docker run --rm '${{ steps.build.outputs.imageid }}' php -i | grep 'New Relic Version'
                    docker run --rm '${{ steps.build.outputs.imageid }}' php -i | grep 'newrelic.enabled => no => no'
                    docker run --rm '${{ steps.build.outputs.imageid }}' php -i | grep 'newrelic.loglevel => warning'
                    docker run --rm '${{ steps.build.outputs.imageid }}' php -i | grep 'newrelic.logfile => /dev/stderr'
                    docker run --rm '${{ steps.build.outputs.imageid }}' php -i | grep 'newrelic.daemon.logfile => /dev/stderr'
                    docker run --rm '${{ steps.build.outputs.imageid }}' php -i | grep 'newrelic.daemon.dont_launch => 3'
                    docker run --rm '${{ steps.build.outputs.imageid }}' composer --version
                    docker run --rm '${{ steps.build.outputs.imageid }}' pt-online-schema-change --version
                    docker run --rm '${{ steps.build.outputs.imageid }}' blackfire version
    push:
        needs: [ build ]
        runs-on: ubuntu-latest
        if: github.ref_type == 'tag'
        steps:
            -
                uses: actions/checkout@v4.2.2
            -
                uses: docker/setup-buildx-action@v3.8.0
            -
                uses: docker/login-action@v3.3.0
                with:
                    username: ${{ secrets.DOCKER_HUB_USERNAME }}
                    password: ${{ secrets.DOCKER_HUB_PASSWORD }}
            -
                id: meta
                uses: docker/metadata-action@v5.6.1
                with:
                    images: ${{ env.DOCKER_IMAGE }}
            -
                uses: docker/build-push-action@v6.11.0
                with:
                    context: .
                    push: true
                    platforms: linux/amd64,linux/arm64
                    tags: ${{ steps.meta.outputs.tags }}
                    labels: ${{ steps.meta.outputs.labels }}
                    # https://docs.docker.com/build/ci/github-actions/cache/#github-cache
                    cache-from: type=gha
